<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
</head>
<body>
    <img src="./Macbook Air - 1.png" class="bg-img" alt="">
    <header class="nav">
        <div class="logo">
            <svg class="logo-img" xmlns="http://www.w3.org/2000/svg" width="56" height="56" viewBox="0 0 56 56" fill="none">
                <path d="M56 28C56 35.4261 53.05 42.548 47.799 47.799C42.548 53.05 35.4261 56 28 56C20.5739 56 13.452 53.05 8.20101 47.799C2.94999 42.548 0 35.4261 0 28C0 20.5739 2.94999 13.452 8.20101 8.20101C13.452 2.94999 20.5739 0 28 0C35.4261 0 42.548 2.94999 47.799 8.20101C53.05 13.452 56 20.5739 56 28ZM52.0873 28.0019C52.0873 21.6136 49.5495 15.4869 45.0323 10.9696C40.515 6.4524 34.3883 3.91464 28 3.91464C21.6117 3.91464 15.485 6.4524 10.9677 10.9696C6.45048 15.4869 3.91271 21.6136 3.91271 28.0019C3.91271 34.3903 6.45048 40.517 10.9677 45.0342C15.485 49.5514 21.6117 52.0892 28 52.0892C34.3883 52.0892 40.515 49.5514 45.0323 45.0342C49.5495 40.517 52.0873 34.3903 52.0873 28.0019Z" fill="#FF0000"/>
                <path d="M30.118 34.6766C30.1184 34.6874 30.1218 34.6978 30.128 34.7067C30.1342 34.7155 30.1428 34.7224 30.1527 34.7265C30.1627 34.7305 30.1737 34.7316 30.1843 34.7296C30.1949 34.7276 30.2046 34.7226 30.2125 34.7152L34.6321 30.2955C34.6534 30.2738 34.6673 30.2459 34.6718 30.2158C34.6763 30.1856 34.6712 30.1549 34.6571 30.1278C33.3285 27.6376 33.1152 25.1647 34.0172 22.7091C36.6077 15.6527 46.216 14.8413 49.9437 21.3638C52.22 25.3497 50.9903 30.4844 47.1836 33.0132C44.3368 34.906 40.8385 34.9792 37.8278 33.3062C37.8151 33.2995 37.8006 33.297 37.7864 33.299C37.7722 33.3011 37.759 33.3077 37.7488 33.3178L30.2298 40.8348C30.1582 40.9064 30.118 41.0034 30.118 41.1047V51.0734C30.1181 51.0912 30.1115 51.1082 30.0997 51.1212C30.0878 51.1341 30.0716 51.1418 30.0544 51.1428C28.6641 51.2481 27.2737 51.2481 25.8834 51.1428C25.814 51.1376 25.7793 51.1004 25.7793 51.031L25.7774 41.1528C25.7774 41.0392 25.7324 40.9297 25.6521 40.8483L18.1736 33.3775C18.1222 33.3261 18.0638 33.3171 17.9982 33.3505C15.0165 34.8482 11.9056 34.9484 9.09536 33.2542C4.99954 30.7813 3.46915 25.3189 6.07313 21.1286C8.31282 17.5262 12.8558 15.8782 16.888 17.5262C21.8878 19.5674 23.8692 25.4172 21.2306 30.1066C21.1933 30.1735 21.2016 30.2339 21.2556 30.2878L25.6945 34.7267C25.7013 34.7337 25.71 34.7385 25.7195 34.7405C25.729 34.7425 25.7389 34.7415 25.7478 34.7378C25.7568 34.734 25.7644 34.7276 25.7697 34.7195C25.775 34.7113 25.7777 34.7018 25.7774 34.692L25.7793 22.2253C25.7793 22.1726 25.7543 22.1392 25.7042 22.1251C20.0857 20.4906 17.4239 14.3594 20.3169 9.20158C21.9688 6.25451 25.3148 4.56607 28.6339 4.83206C34.713 5.3197 38.4966 11.6668 35.9466 17.2506C34.8338 19.6894 32.8987 21.3214 30.1411 22.1463C30.1257 22.1514 30.118 22.1617 30.118 22.1771V34.6766Z" fill="#FF0000"/>
              </svg>
            <svg class="logo-txt" xmlns="http://www.w3.org/2000/svg" width="255" height="36" viewBox="0 0 255 36" fill="none">
                <path d="M27.7571 15.4698C27.7571 15.2522 27.6792 15.0692 27.5234 14.9208L22.0773 9.64163C21.9795 9.54618 21.8508 9.49176 21.7174 9.48952C19.4767 9.44129 17.4919 9.41532 15.2029 10.2352C12.4984 11.2072 10.1389 13.2217 9.3376 16.0115C7.77574 21.4279 11.545 25.709 16.583 26.8999C18.5121 27.3525 20.9421 27.1744 23.0938 27.1819C23.2199 27.1843 23.3275 27.2288 23.4165 27.3154L26.1136 29.9235C26.2074 30.0138 26.2821 30.1221 26.3331 30.2419C26.3841 30.3618 26.4104 30.4907 26.4104 30.6209L26.4067 35.8036C26.4067 35.8528 26.3871 35.9 26.3524 35.9348C26.3176 35.9695 26.2704 35.9891 26.2212 35.9891C23.6094 35.9965 20.9915 36.0002 18.3674 36.0002C11.6117 35.9965 5.36433 32.5612 2.13675 26.6736C-3.825 15.8 3.42407 3.53147 14.7911 1.12377C17.8703 0.474545 21.9697 0.767625 25.4495 0.741656C25.6138 0.741584 25.7707 0.804072 25.8873 0.91602L36.6607 11.3556C36.7745 11.4669 36.8314 11.6017 36.8314 11.76L36.8277 35.8963C36.8277 35.9606 36.7955 35.9928 36.7312 35.9928H27.9426C27.9202 35.9928 27.898 35.9885 27.8773 35.9801C27.8566 35.9717 27.8377 35.9594 27.8219 35.9439C27.806 35.9284 27.7935 35.91 27.7849 35.8897C27.7763 35.8695 27.7719 35.8478 27.7719 35.8258L27.7571 15.4698Z" fill="white"/>
                <path d="M41.6385 23.3901C41.9502 23.3926 41.9761 23.3073 41.7164 23.1341L38.6818 21.1382C38.6213 21.0984 38.5717 21.0443 38.5374 20.9809C38.5031 20.9174 38.4851 20.8465 38.4852 20.7747L38.4889 0.934313C38.4889 0.815598 38.5495 0.756236 38.6706 0.756236C49.0682 0.741396 59.457 0.742637 69.8372 0.759949C73.7771 0.767369 76.5892 4.45868 76.6634 8.12773C76.7153 10.6405 76.7227 13.1361 76.6856 15.6142C76.6832 15.7824 76.5978 15.8665 76.4296 15.8665L67.897 15.8628C67.7782 15.8628 67.7177 15.8022 67.7152 15.681C67.6781 13.2436 68.5054 9.80088 64.8326 9.78233C59.1491 9.7576 53.4656 9.75884 47.7821 9.78604C47.6337 9.78852 47.5595 9.86272 47.5595 10.0086L47.5446 15.8776C47.5446 15.9656 47.5662 16.0524 47.6075 16.1307C47.6489 16.2089 47.7088 16.2761 47.7821 16.3265L76.8748 35.718C77.1469 35.901 77.1197 35.9925 76.7932 35.9925H61.2229C61.0869 35.9925 60.9632 35.9554 60.8519 35.8812L47.7487 27.1779C47.7267 27.1637 47.7012 27.1556 47.675 27.1544C47.6488 27.1533 47.6229 27.1591 47.6 27.1713C47.5771 27.1835 47.5581 27.2016 47.5451 27.2237C47.5321 27.2458 47.5255 27.271 47.5261 27.2966L47.5706 29.2665C47.5756 29.4174 47.5014 29.4928 47.348 29.4928H38.5816C38.557 29.4928 38.5334 29.4831 38.516 29.4657C38.4986 29.4483 38.4889 29.4247 38.4889 29.4001L38.4814 23.6572C38.4814 23.6199 38.4889 23.5829 38.5033 23.5485C38.5177 23.514 38.5388 23.4828 38.5653 23.4565C38.5919 23.4303 38.6234 23.4096 38.6581 23.3957C38.6927 23.3817 38.7298 23.3748 38.7671 23.3753L41.6385 23.3901Z" fill="white"/>
                <path d="M90.6171 11.0324C85.375 13.8408 84.5403 20.9489 89.2296 24.7626C90.3969 25.7124 91.8228 26.4049 93.507 26.8402C95.5252 27.3596 97.9886 27.1815 100.222 27.1815C100.355 27.1815 100.483 27.2335 100.578 27.3262L103.305 29.9564C103.39 30.0397 103.459 30.1394 103.505 30.2497C103.552 30.3599 103.576 30.4784 103.576 30.5982L103.572 35.8069C103.572 35.8561 103.552 35.9033 103.518 35.9381C103.483 35.9728 103.436 35.9924 103.386 35.9924C100.713 35.9949 98.0331 35.9887 95.3471 35.9739C86.0057 35.9219 78.0851 29.2553 77.217 19.9287C76.3452 10.5761 83.7872 2.44038 92.791 0.974986C95.5883 0.518673 99.4317 0.774659 102.652 0.737561C102.783 0.737735 102.908 0.788286 103.001 0.878526L113.882 11.4183C113.917 11.4524 113.945 11.4936 113.964 11.5394C113.983 11.5853 113.993 11.6349 113.993 11.6854V35.8032C113.993 35.9293 113.93 35.9924 113.804 35.9924H105.108C105.086 35.9924 105.064 35.9881 105.044 35.9797C105.024 35.9713 105.005 35.959 104.99 35.9435C104.974 35.928 104.962 35.9096 104.954 35.8893C104.945 35.8691 104.941 35.8474 104.941 35.8254L104.922 15.4175C104.92 15.2464 104.851 15.0837 104.729 14.9649L99.2833 9.68575C99.1646 9.57198 99.0236 9.51262 98.8604 9.50767C95.9296 9.39267 93.4514 9.51139 90.6171 11.0324Z" fill="white"/>
                <path d="M131.862 10.5465L153.58 25.0001C153.835 25.1708 153.962 25.4094 153.962 25.7161V35.8886C153.962 35.9141 153.952 35.9387 153.934 35.9568C153.916 35.9748 153.891 35.985 153.866 35.985C144.084 36.0023 134.295 36.0011 124.498 35.9813C122.715 35.9764 121.467 35.8688 120.755 35.6586C114.856 33.9038 115.661 26.5249 115.78 21.0343C115.783 20.9254 115.84 20.871 115.951 20.871H124.55C124.664 20.871 124.722 20.9279 124.725 21.0417C124.817 23.8501 123.857 26.907 127.967 26.9107C131.969 26.9157 135.911 26.9255 139.794 26.9404C140.051 26.9428 140.072 26.8724 139.857 26.7289L115.654 10.5724C115.303 10.3375 115.339 10.2212 115.762 10.2237L131.228 10.3239C131.362 10.3239 131.428 10.2571 131.428 10.1236L131.432 0.930517C131.432 0.882305 131.451 0.836063 131.484 0.801972C131.518 0.767881 131.563 0.748737 131.61 0.748737H141.79C142.107 0.748703 142.414 0.854533 142.662 1.04924L150.141 6.95163C150.26 7.04561 150.319 7.1668 150.319 7.31519L150.323 9.99371C150.323 10.1495 150.246 10.2274 150.093 10.2274H131.959C131.573 10.2274 131.541 10.3338 131.862 10.5465Z" fill="white"/>
                <path d="M175.009 9.59671C168.621 8.69521 161.342 12.2233 162.258 19.6653C162.722 23.4456 165.935 25.8014 169.344 26.7845C171.392 27.3744 173.941 27.1963 176.218 27.174C176.34 27.174 176.458 27.2218 176.549 27.3076L179.339 29.9861C179.409 30.0529 179.465 30.1337 179.503 30.2237C179.541 30.3136 179.561 30.4107 179.561 30.5092L179.557 35.7995C179.557 35.9256 179.494 35.9887 179.368 35.9887C176.643 36.006 173.926 35.9986 171.218 35.9664C152.857 35.7624 146.143 12.6425 162.511 3.17494C167.775 0.129137 173.035 0.741273 178.671 0.748693C178.799 0.748834 178.923 0.799412 179.016 0.889669L189.704 11.2476C189.798 11.3379 189.872 11.4462 189.923 11.5661C189.974 11.6859 190.001 11.8148 190.001 11.9451L190.015 35.7475C190.015 35.8125 189.99 35.8748 189.945 35.9207C189.9 35.9666 189.838 35.9924 189.774 35.9924H181.138C181.012 35.9924 180.949 35.9293 180.949 35.8032V15.5548C180.949 15.4352 180.924 15.3167 180.877 15.2064C180.83 15.0961 180.761 14.9963 180.674 14.913L175.339 9.75624C175.248 9.6672 175.138 9.61402 175.009 9.59671Z" fill="white"/>
                <path d="M194.03 23.4086C194.054 23.41 194.077 23.4035 194.096 23.3902C194.115 23.377 194.129 23.3577 194.136 23.3354C194.143 23.3132 194.142 23.2893 194.133 23.2676C194.125 23.2459 194.11 23.2276 194.09 23.2157L190.973 21.1307C190.907 21.0862 190.853 21.026 190.815 20.9555C190.778 20.885 190.758 20.8063 190.758 20.7264L190.754 0.949077C190.754 0.815522 190.821 0.748753 190.955 0.748753H199.68C199.707 0.748753 199.732 0.759302 199.751 0.778087C199.77 0.796872 199.781 0.822349 199.781 0.848915L199.777 9.53742C199.777 9.55205 199.781 9.56632 199.788 9.57877C199.796 9.59121 199.807 9.60137 199.82 9.60818C199.834 9.615 199.849 9.61822 199.864 9.61752C199.879 9.61682 199.894 9.61222 199.907 9.6042L213.129 0.845202C213.221 0.784648 213.329 0.752401 213.44 0.752455L229.085 0.745039C229.382 0.745039 229.408 0.827898 229.163 0.993605L203.279 18.2407C203.259 18.2528 203.243 18.2697 203.232 18.2898C203.221 18.31 203.215 18.3327 203.215 18.3559C203.215 18.3792 203.221 18.4022 203.232 18.4229C203.243 18.4436 203.259 18.4613 203.279 18.4745L229.289 35.8181C229.321 35.8379 229.335 35.8676 229.33 35.9071C229.32 35.9616 229.27 35.9875 229.181 35.985C223.953 35.9826 218.765 35.9875 213.618 35.9999C213.413 35.9999 213.211 35.9393 213.04 35.8255L199.899 27.0999C199.888 27.0926 199.876 27.0885 199.862 27.0878C199.849 27.0871 199.836 27.0899 199.824 27.0959C199.813 27.102 199.803 27.111 199.796 27.1222C199.789 27.1333 199.785 27.1461 199.784 27.1593L199.777 29.3592C199.776 29.3959 199.761 29.4308 199.735 29.4565C199.71 29.4821 199.675 29.4965 199.64 29.4965L190.955 29.4928C190.902 29.4928 190.851 29.4721 190.813 29.4352C190.776 29.3983 190.754 29.3483 190.754 29.2962L190.747 23.7128C190.747 23.6672 190.756 23.622 190.774 23.5799C190.791 23.5378 190.817 23.4996 190.849 23.4675C190.882 23.4354 190.92 23.4101 190.963 23.393C191.005 23.3759 191.05 23.3673 191.096 23.3678L194.03 23.4086Z" fill="white"/>
                <path d="M239.516 9.57451C233.161 8.72495 225.578 12.3013 226.851 19.9399C227.441 23.4717 230.501 25.8905 233.896 26.8068C235.966 27.3633 238.489 27.1927 240.774 27.1741C240.837 27.1729 240.9 27.1844 240.96 27.208C241.019 27.2316 241.073 27.2667 241.119 27.3114L243.89 30.0418C243.989 30.1383 244.039 30.2558 244.039 30.3943L244.053 35.8886C244.053 35.9142 244.043 35.9387 244.025 35.9568C244.007 35.9749 243.983 35.985 243.957 35.985C240.977 36.0023 237.999 35.9986 235.024 35.9739C229.192 35.9294 223.404 32.3642 220.384 27.6119C214.515 18.3669 218.656 7.34489 228.079 2.62594C232.898 0.214527 237.906 0.748745 243.093 0.745035C243.295 0.744979 243.489 0.823462 243.634 0.963915L254.089 11.0696C254.22 11.1975 254.325 11.3504 254.396 11.5193C254.467 11.6882 254.504 11.8695 254.504 12.0527L254.5 35.8033C254.5 35.9269 254.439 35.9887 254.315 35.9887L245.697 35.9962C245.568 35.9962 245.504 35.9319 245.504 35.8033C245.494 29.306 245.494 22.8138 245.504 16.3265C245.508 14.9538 245.192 14.9353 244.15 13.9039C242.725 12.4942 241.286 11.1017 239.832 9.72661C239.743 9.64252 239.637 9.59182 239.516 9.57451Z" fill="white"/>
              </svg>
        </div>
        <ul class="nav-menu">
            <% if (!user) { %>
            <a class="nav-item" id="special" href='/register' data-value="REGISTER">REGISTER</a>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <a class="nav-item" id="special2" data-value="LOGIN" href="/login">LOGIN</a>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <% } %>
            <a class="nav-item" id="special3" data-value="TEAMS" href="/hackReg">TEAMS</a>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <a class="nav-item" id="special4" data-value="PROMO" href="/promo">PROMO</a>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <a class="nav-item" id="special5" data-value="FAQS" href="/faqs">FAQS</a>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <a class="nav-item" id="special6" data-value="SNAKE" href="/snake">SNAKE</a>
        </ul>
    </header>
    <h1 class="heading">ADAM SMASHER</h1>
    <p class="coords" id="coords"></p>
    <div class="rectangle" id="rectangle"></div>
    <div class="rectangle2" id="rectangle2"></div>
    <!-- <marquee style="color: white; position: fixed; bottom: 0px; font-family: BlenderProBook; opacity: 0.7;">LATEST NEWS - Night city is being robbed by Bhavit Grover, this notorious criminal is known online as CasaN0va or whatever the fuck he wants to name himself. Apart from that, there is a guy called Shyamak who has lost all his hair and wants revenge. He has begun his hunt for Arasaka Executives to feed his lust for beautiful individuals. </marquee> -->
</body>

<style>
    .rectangle {
        height: 20px;
        width: 10px;
        position: absolute;
        top: 70vh;
        left: 1.57vw;
        background: red;
    }
    .coords {
        font-family: BlenderProBook;
        color: #f00;
        margin-top: 2.6vw;
        margin-left: 87.5vw;
        font-size: 0.8em;
    }
    .rectangle2 {
        width: 20px;
        height: 10px;
        background: red;
        margin-top: 2.9vh;
        margin-left: 26vw;
    }
    @font-face 
    {
        font-family:BlenderProBook;
        font-style:normal;
        font-weight:400;
        src:url('./BlenderProBook.woff2') format("woff2");
    }
    @font-face 
    {
        font-family:sentex;
        font-style:normal;
        font-weight:400;
        src:url('./Sentex-Regular.ttf');
    }
    * {
        margin: 0;
        padding: 0;
    }
    body {
        width: 100vw;
        height: auto;
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        display: flex;
        flex-direction: column;
    }
    ::-webkit-scrollbar {
        display: none;
    }
    .bg-img {
        aspect-ratio: initial;
        width: 100vw;
        margin: 0;
        padding: 0;
        position: absolute;
        top: 0;
        z-index: -2;
    }
    .nav {
        display: flex;
        flex-direction: row;
        width: 90%;
        align-self: center;
        margin-top: 2vw;
        align-items: center;
        justify-content: space-between;
    }
    .logo {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 1vw;
    }
    .logo-img {
        aspect-ratio: 1;
        width: 2.917vw;
    }
    .logo-txt {
        aspect-ratio: initial;
        width: 13.281vw;
        height: 1.875vw;
    }
    .nav-menu {
        display: flex;
        height: 2vw;
        flex-direction: row;
        align-items: center;
        border: 1px solid #FF0000;
        padding: 0px 2vw;
        justify-content: center;
        width: fit-content;
        gap: 2vw;
        margin-left: 8vw;
        margin-right: -3vw;
    }
    .nav-item {
        color: #ff0000;
        list-style-type: none;
        font-family: BlenderProBook;
        text-decoration: none;
    }
    .line {
        height: 135%;
        margin-top: -5px;
        width: 1px;
        background: #FF0000;
        transform: rotate(-40deg);
    }
    .heading  {
        margin-left: 5vw;
        color: transparent;
        margin-top: 32vw;
        width: 30%;
        font-family: sentex;
        font-size: 5vw;
        font-style: normal;
        font-weight: 400;
        line-height: normal;
        -webkit-text-stroke: 1px white;
        animation: glitch 1s linear infinite;
    }
    @keyframes glitch{
        2%,64%{
            transform: translate(2px,0) skew(0deg);
        }
        4%,60%{
            transform: translate(-2px,0) skew(0deg);
        }
        62%{
            transform: translate(0,0) skew(5deg); 
        }
        }

        .heading:before,
        .heading:after{
            content: attr(title);
            position: absolute;
            left: 0;
        }

        .heading:before{
            animation: glitchTop 1s linear infinite;
            clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
            -webkit-clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
        }

        @keyframes glitchTop{
            2%,64%{
                transform: translate(2px,-2px);
            }
            4%,60%{
                transform: translate(-2px,2px);
            }
            62%{
                transform: translate(13px,-1px) skew(-13deg); 
            }
        }

        .heading:after{
            animation: glitchBotom 1.5s linear infinite;
            clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
            -webkit-clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
        }

        @keyframes glitchBotom{
            2%,64%{
                transform: translate(-2px,0);
            }
            4%,60%{
                transform: translate(-2px,0);
            }
            62%{
                transform: translate(-22px,5px) skew(21deg); 
            }
        }

</style>
<script>
    const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

    let interval = null;

    document.getElementById("special").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    document.getElementById("special2").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    document.getElementById("special3").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    document.getElementById("special4").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    document.getElementById("special5").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    document.getElementById("special6").onmouseover = event => {  
    let iteration = 0;
    
    clearInterval(interval);
    
    interval = setInterval(() => {
        event.target.innerText = event.target.innerText
        .split("")
        .map((letter, index) => {
            if(index < iteration) {
            return event.target.dataset.value[index];
            }
        
            return letters[Math.floor(Math.random() * 26)]
        })
        .join("");
        
        if(iteration >= event.target.dataset.value.length){ 
        clearInterval(interval);
        }
        
        iteration += 1 / 3;
    }, 30);
    }
    window.addEventListener('mousemove', function(event) {
        if (event.pageY < 30 || event.pageY > screen.height - 115) return;
        var kuchhBhi = (event.pageX / screen.width) * 100
        if (kuchhBhi < 14 || kuchhBhi > 88.5) return;
        // console.log(screen.height)
        const styles = {
            top: `${event.pageY}px`
        }
        const styles2 = {
            marginLeft: `${event.pageX}px`
        }
        const styleTiming = {
            duration: 1500
        }
        console.log(screen.width, kuchhBhi)
        document.getElementById('rectangle').animate(styles, styleTiming)
        document.getElementById('rectangle').style.top = event.pageY + 'px';
        document.getElementById('rectangle2').animate(styles2, styleTiming)
        document.getElementById('rectangle2').style.marginLeft = event.pageX + 'px';
        document.getElementById('coords').innerHTML = `${event.pageX}, ${event.pageY}`
    })
</script>
</html>