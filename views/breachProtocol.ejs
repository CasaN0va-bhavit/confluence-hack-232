<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Breach Protocol</title>
    <style>
        body {
            height: auto;
            width: 100%;
            background-image: linear-gradient(#000615, #190000);
            overflow-x: hidden;
            display: flex;
            flex-direction: column;
        }
        * {box-sizing: border-box;}
        .title {
            width: 41vw;
            align-self: center;
        }
        @font-face 
        {
            font-family:BlenderProBook;
            font-style:normal;
            font-weight:400;
            src:url('./BlenderProBook.woff2') format("woff2");
        }
        @font-face 
        {
            font-family:sentex;
            font-style:normal;
            font-weight:400;
            src:url('./Sentex-Regular.ttf');
        }
        .nav {
            display: flex;
            flex-direction: row;
            width: 90%;
            align-self: center;
            margin-top: 1vw;
            align-items: center;
            justify-content: space-between;
        }
        .logo {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            gap: 1vw;
        }
        .logo-img {
            aspect-ratio: 1;
            width: 2.917vw;
        }
        .logo-txt {
            aspect-ratio: initial;
            width: 13.281vw;
            height: 1.875vw;
        }
        .nav-menu {
            display: flex;
            height: 2vw;
            flex-direction: row;
            align-items: center;
            border: 1px solid #FF0000;
            padding: 0px 2vw;
            justify-content: center;
            width: fit-content;
            gap: 2vw;
            margin-left: 8vw;
            margin-right: -3vw;
        }
        .nav-item {
            color: #ff0000;
            list-style-type: none;
            font-family: BlenderProBook;
        }
        .line {
            height: 135%;
            margin-top: -5px;
            width: 1px;
            background: #FF0000;
            transform: rotate(-40deg);
        }
        .bottom-vector {
            position: relative;
            bottom: -1vw;
            align-self: end;
            right: 2vw;
            width: 55vw;
            margin-bottom: 0.5vw;
        }
        ::-webkit-scrollbar {
            display: none;
        }
        .boxContainer {
            width: 95vw;
            height: 67vh;
            margin: 0 auto;
            display: flex;
            justify-content: space-around;
            padding-top: 20px;
        }
        .mainBreach {
            background-color: red;
            clip-path: polygon(5% 0, 100% 0%, 100% 100%, 0% 100%, 0 30%);
            width: 40vw;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 1px;
        }
        .breachKaBeta {
            width: 40vw;
            clip-path: polygon(5% 0, 100% 0%, 100% 100%, 0% 100%, 0 30%);
            padding: 10px;
            padding-left: 25px;
            background-color: #08040e;
        }
        .mainBreach p {
            margin: 0px;
            color: white;
            font-family: BlenderProBook;
            font-size: 1.1em;
        }
        .mainBox {
            border: 1px solid red;
            border-top: none;
            width: 100%;
        }
        .mainBox table {
            width: 100%;
        }
        .mainBox td {
            color: white;
            text-align: center;
            vertical-align: middle;
            padding: 10px 0;
            font-family: BlenderProBook;
            font-size: 1.3em;
            border: 2px solid transparent;
            cursor: pointer;
        }
        #sequenceTable {
            width: auto;
        }
        #sequenceTable td {
            padding: 10px 20px;
        }
        #matrix td:hover {
            border: 2px solid cyan;
        }
        .timeContainer {
            border: 1px solid red;
            min-width: 10vw;
            padding: 10px 10px;
            margin-bottom: 10px;
            align-self: flex-end;
            font-family: BlenderProBook;
            font-size: 1.5em;
            text-align: center;
            color: white;
        }
        .matrix {
            display: flex;
            flex-direction: column;
        }
    </style>
</head>
<body>
    <header class="nav">
        <div class="logo">
            <svg class="logo-img" xmlns="http://www.w3.org/2000/svg" width="56" height="56" viewBox="0 0 56 56" fill="none">
                <path d="M56 28C56 35.4261 53.05 42.548 47.799 47.799C42.548 53.05 35.4261 56 28 56C20.5739 56 13.452 53.05 8.20101 47.799C2.94999 42.548 0 35.4261 0 28C0 20.5739 2.94999 13.452 8.20101 8.20101C13.452 2.94999 20.5739 0 28 0C35.4261 0 42.548 2.94999 47.799 8.20101C53.05 13.452 56 20.5739 56 28ZM52.0873 28.0019C52.0873 21.6136 49.5495 15.4869 45.0323 10.9696C40.515 6.4524 34.3883 3.91464 28 3.91464C21.6117 3.91464 15.485 6.4524 10.9677 10.9696C6.45048 15.4869 3.91271 21.6136 3.91271 28.0019C3.91271 34.3903 6.45048 40.517 10.9677 45.0342C15.485 49.5514 21.6117 52.0892 28 52.0892C34.3883 52.0892 40.515 49.5514 45.0323 45.0342C49.5495 40.517 52.0873 34.3903 52.0873 28.0019Z" fill="#FF0000"/>
                <path d="M30.118 34.6766C30.1184 34.6874 30.1218 34.6978 30.128 34.7067C30.1342 34.7155 30.1428 34.7224 30.1527 34.7265C30.1627 34.7305 30.1737 34.7316 30.1843 34.7296C30.1949 34.7276 30.2046 34.7226 30.2125 34.7152L34.6321 30.2955C34.6534 30.2738 34.6673 30.2459 34.6718 30.2158C34.6763 30.1856 34.6712 30.1549 34.6571 30.1278C33.3285 27.6376 33.1152 25.1647 34.0172 22.7091C36.6077 15.6527 46.216 14.8413 49.9437 21.3638C52.22 25.3497 50.9903 30.4844 47.1836 33.0132C44.3368 34.906 40.8385 34.9792 37.8278 33.3062C37.8151 33.2995 37.8006 33.297 37.7864 33.299C37.7722 33.3011 37.759 33.3077 37.7488 33.3178L30.2298 40.8348C30.1582 40.9064 30.118 41.0034 30.118 41.1047V51.0734C30.1181 51.0912 30.1115 51.1082 30.0997 51.1212C30.0878 51.1341 30.0716 51.1418 30.0544 51.1428C28.6641 51.2481 27.2737 51.2481 25.8834 51.1428C25.814 51.1376 25.7793 51.1004 25.7793 51.031L25.7774 41.1528C25.7774 41.0392 25.7324 40.9297 25.6521 40.8483L18.1736 33.3775C18.1222 33.3261 18.0638 33.3171 17.9982 33.3505C15.0165 34.8482 11.9056 34.9484 9.09536 33.2542C4.99954 30.7813 3.46915 25.3189 6.07313 21.1286C8.31282 17.5262 12.8558 15.8782 16.888 17.5262C21.8878 19.5674 23.8692 25.4172 21.2306 30.1066C21.1933 30.1735 21.2016 30.2339 21.2556 30.2878L25.6945 34.7267C25.7013 34.7337 25.71 34.7385 25.7195 34.7405C25.729 34.7425 25.7389 34.7415 25.7478 34.7378C25.7568 34.734 25.7644 34.7276 25.7697 34.7195C25.775 34.7113 25.7777 34.7018 25.7774 34.692L25.7793 22.2253C25.7793 22.1726 25.7543 22.1392 25.7042 22.1251C20.0857 20.4906 17.4239 14.3594 20.3169 9.20158C21.9688 6.25451 25.3148 4.56607 28.6339 4.83206C34.713 5.3197 38.4966 11.6668 35.9466 17.2506C34.8338 19.6894 32.8987 21.3214 30.1411 22.1463C30.1257 22.1514 30.118 22.1617 30.118 22.1771V34.6766Z" fill="#FF0000"/>
              </svg>
            <svg class="logo-txt" xmlns="http://www.w3.org/2000/svg" width="255" height="36" viewBox="0 0 255 36" fill="none">
                <path d="M27.7571 15.4698C27.7571 15.2522 27.6792 15.0692 27.5234 14.9208L22.0773 9.64163C21.9795 9.54618 21.8508 9.49176 21.7174 9.48952C19.4767 9.44129 17.4919 9.41532 15.2029 10.2352C12.4984 11.2072 10.1389 13.2217 9.3376 16.0115C7.77574 21.4279 11.545 25.709 16.583 26.8999C18.5121 27.3525 20.9421 27.1744 23.0938 27.1819C23.2199 27.1843 23.3275 27.2288 23.4165 27.3154L26.1136 29.9235C26.2074 30.0138 26.2821 30.1221 26.3331 30.2419C26.3841 30.3618 26.4104 30.4907 26.4104 30.6209L26.4067 35.8036C26.4067 35.8528 26.3871 35.9 26.3524 35.9348C26.3176 35.9695 26.2704 35.9891 26.2212 35.9891C23.6094 35.9965 20.9915 36.0002 18.3674 36.0002C11.6117 35.9965 5.36433 32.5612 2.13675 26.6736C-3.825 15.8 3.42407 3.53147 14.7911 1.12377C17.8703 0.474545 21.9697 0.767625 25.4495 0.741656C25.6138 0.741584 25.7707 0.804072 25.8873 0.91602L36.6607 11.3556C36.7745 11.4669 36.8314 11.6017 36.8314 11.76L36.8277 35.8963C36.8277 35.9606 36.7955 35.9928 36.7312 35.9928H27.9426C27.9202 35.9928 27.898 35.9885 27.8773 35.9801C27.8566 35.9717 27.8377 35.9594 27.8219 35.9439C27.806 35.9284 27.7935 35.91 27.7849 35.8897C27.7763 35.8695 27.7719 35.8478 27.7719 35.8258L27.7571 15.4698Z" fill="white"/>
                <path d="M41.6385 23.3901C41.9502 23.3926 41.9761 23.3073 41.7164 23.1341L38.6818 21.1382C38.6213 21.0984 38.5717 21.0443 38.5374 20.9809C38.5031 20.9174 38.4851 20.8465 38.4852 20.7747L38.4889 0.934313C38.4889 0.815598 38.5495 0.756236 38.6706 0.756236C49.0682 0.741396 59.457 0.742637 69.8372 0.759949C73.7771 0.767369 76.5892 4.45868 76.6634 8.12773C76.7153 10.6405 76.7227 13.1361 76.6856 15.6142C76.6832 15.7824 76.5978 15.8665 76.4296 15.8665L67.897 15.8628C67.7782 15.8628 67.7177 15.8022 67.7152 15.681C67.6781 13.2436 68.5054 9.80088 64.8326 9.78233C59.1491 9.7576 53.4656 9.75884 47.7821 9.78604C47.6337 9.78852 47.5595 9.86272 47.5595 10.0086L47.5446 15.8776C47.5446 15.9656 47.5662 16.0524 47.6075 16.1307C47.6489 16.2089 47.7088 16.2761 47.7821 16.3265L76.8748 35.718C77.1469 35.901 77.1197 35.9925 76.7932 35.9925H61.2229C61.0869 35.9925 60.9632 35.9554 60.8519 35.8812L47.7487 27.1779C47.7267 27.1637 47.7012 27.1556 47.675 27.1544C47.6488 27.1533 47.6229 27.1591 47.6 27.1713C47.5771 27.1835 47.5581 27.2016 47.5451 27.2237C47.5321 27.2458 47.5255 27.271 47.5261 27.2966L47.5706 29.2665C47.5756 29.4174 47.5014 29.4928 47.348 29.4928H38.5816C38.557 29.4928 38.5334 29.4831 38.516 29.4657C38.4986 29.4483 38.4889 29.4247 38.4889 29.4001L38.4814 23.6572C38.4814 23.6199 38.4889 23.5829 38.5033 23.5485C38.5177 23.514 38.5388 23.4828 38.5653 23.4565C38.5919 23.4303 38.6234 23.4096 38.6581 23.3957C38.6927 23.3817 38.7298 23.3748 38.7671 23.3753L41.6385 23.3901Z" fill="white"/>
                <path d="M90.6171 11.0324C85.375 13.8408 84.5403 20.9489 89.2296 24.7626C90.3969 25.7124 91.8228 26.4049 93.507 26.8402C95.5252 27.3596 97.9886 27.1815 100.222 27.1815C100.355 27.1815 100.483 27.2335 100.578 27.3262L103.305 29.9564C103.39 30.0397 103.459 30.1394 103.505 30.2497C103.552 30.3599 103.576 30.4784 103.576 30.5982L103.572 35.8069C103.572 35.8561 103.552 35.9033 103.518 35.9381C103.483 35.9728 103.436 35.9924 103.386 35.9924C100.713 35.9949 98.0331 35.9887 95.3471 35.9739C86.0057 35.9219 78.0851 29.2553 77.217 19.9287C76.3452 10.5761 83.7872 2.44038 92.791 0.974986C95.5883 0.518673 99.4317 0.774659 102.652 0.737561C102.783 0.737735 102.908 0.788286 103.001 0.878526L113.882 11.4183C113.917 11.4524 113.945 11.4936 113.964 11.5394C113.983 11.5853 113.993 11.6349 113.993 11.6854V35.8032C113.993 35.9293 113.93 35.9924 113.804 35.9924H105.108C105.086 35.9924 105.064 35.9881 105.044 35.9797C105.024 35.9713 105.005 35.959 104.99 35.9435C104.974 35.928 104.962 35.9096 104.954 35.8893C104.945 35.8691 104.941 35.8474 104.941 35.8254L104.922 15.4175C104.92 15.2464 104.851 15.0837 104.729 14.9649L99.2833 9.68575C99.1646 9.57198 99.0236 9.51262 98.8604 9.50767C95.9296 9.39267 93.4514 9.51139 90.6171 11.0324Z" fill="white"/>
                <path d="M131.862 10.5465L153.58 25.0001C153.835 25.1708 153.962 25.4094 153.962 25.7161V35.8886C153.962 35.9141 153.952 35.9387 153.934 35.9568C153.916 35.9748 153.891 35.985 153.866 35.985C144.084 36.0023 134.295 36.0011 124.498 35.9813C122.715 35.9764 121.467 35.8688 120.755 35.6586C114.856 33.9038 115.661 26.5249 115.78 21.0343C115.783 20.9254 115.84 20.871 115.951 20.871H124.55C124.664 20.871 124.722 20.9279 124.725 21.0417C124.817 23.8501 123.857 26.907 127.967 26.9107C131.969 26.9157 135.911 26.9255 139.794 26.9404C140.051 26.9428 140.072 26.8724 139.857 26.7289L115.654 10.5724C115.303 10.3375 115.339 10.2212 115.762 10.2237L131.228 10.3239C131.362 10.3239 131.428 10.2571 131.428 10.1236L131.432 0.930517C131.432 0.882305 131.451 0.836063 131.484 0.801972C131.518 0.767881 131.563 0.748737 131.61 0.748737H141.79C142.107 0.748703 142.414 0.854533 142.662 1.04924L150.141 6.95163C150.26 7.04561 150.319 7.1668 150.319 7.31519L150.323 9.99371C150.323 10.1495 150.246 10.2274 150.093 10.2274H131.959C131.573 10.2274 131.541 10.3338 131.862 10.5465Z" fill="white"/>
                <path d="M175.009 9.59671C168.621 8.69521 161.342 12.2233 162.258 19.6653C162.722 23.4456 165.935 25.8014 169.344 26.7845C171.392 27.3744 173.941 27.1963 176.218 27.174C176.34 27.174 176.458 27.2218 176.549 27.3076L179.339 29.9861C179.409 30.0529 179.465 30.1337 179.503 30.2237C179.541 30.3136 179.561 30.4107 179.561 30.5092L179.557 35.7995C179.557 35.9256 179.494 35.9887 179.368 35.9887C176.643 36.006 173.926 35.9986 171.218 35.9664C152.857 35.7624 146.143 12.6425 162.511 3.17494C167.775 0.129137 173.035 0.741273 178.671 0.748693C178.799 0.748834 178.923 0.799412 179.016 0.889669L189.704 11.2476C189.798 11.3379 189.872 11.4462 189.923 11.5661C189.974 11.6859 190.001 11.8148 190.001 11.9451L190.015 35.7475C190.015 35.8125 189.99 35.8748 189.945 35.9207C189.9 35.9666 189.838 35.9924 189.774 35.9924H181.138C181.012 35.9924 180.949 35.9293 180.949 35.8032V15.5548C180.949 15.4352 180.924 15.3167 180.877 15.2064C180.83 15.0961 180.761 14.9963 180.674 14.913L175.339 9.75624C175.248 9.6672 175.138 9.61402 175.009 9.59671Z" fill="white"/>
                <path d="M194.03 23.4086C194.054 23.41 194.077 23.4035 194.096 23.3902C194.115 23.377 194.129 23.3577 194.136 23.3354C194.143 23.3132 194.142 23.2893 194.133 23.2676C194.125 23.2459 194.11 23.2276 194.09 23.2157L190.973 21.1307C190.907 21.0862 190.853 21.026 190.815 20.9555C190.778 20.885 190.758 20.8063 190.758 20.7264L190.754 0.949077C190.754 0.815522 190.821 0.748753 190.955 0.748753H199.68C199.707 0.748753 199.732 0.759302 199.751 0.778087C199.77 0.796872 199.781 0.822349 199.781 0.848915L199.777 9.53742C199.777 9.55205 199.781 9.56632 199.788 9.57877C199.796 9.59121 199.807 9.60137 199.82 9.60818C199.834 9.615 199.849 9.61822 199.864 9.61752C199.879 9.61682 199.894 9.61222 199.907 9.6042L213.129 0.845202C213.221 0.784648 213.329 0.752401 213.44 0.752455L229.085 0.745039C229.382 0.745039 229.408 0.827898 229.163 0.993605L203.279 18.2407C203.259 18.2528 203.243 18.2697 203.232 18.2898C203.221 18.31 203.215 18.3327 203.215 18.3559C203.215 18.3792 203.221 18.4022 203.232 18.4229C203.243 18.4436 203.259 18.4613 203.279 18.4745L229.289 35.8181C229.321 35.8379 229.335 35.8676 229.33 35.9071C229.32 35.9616 229.27 35.9875 229.181 35.985C223.953 35.9826 218.765 35.9875 213.618 35.9999C213.413 35.9999 213.211 35.9393 213.04 35.8255L199.899 27.0999C199.888 27.0926 199.876 27.0885 199.862 27.0878C199.849 27.0871 199.836 27.0899 199.824 27.0959C199.813 27.102 199.803 27.111 199.796 27.1222C199.789 27.1333 199.785 27.1461 199.784 27.1593L199.777 29.3592C199.776 29.3959 199.761 29.4308 199.735 29.4565C199.71 29.4821 199.675 29.4965 199.64 29.4965L190.955 29.4928C190.902 29.4928 190.851 29.4721 190.813 29.4352C190.776 29.3983 190.754 29.3483 190.754 29.2962L190.747 23.7128C190.747 23.6672 190.756 23.622 190.774 23.5799C190.791 23.5378 190.817 23.4996 190.849 23.4675C190.882 23.4354 190.92 23.4101 190.963 23.393C191.005 23.3759 191.05 23.3673 191.096 23.3678L194.03 23.4086Z" fill="white"/>
                <path d="M239.516 9.57451C233.161 8.72495 225.578 12.3013 226.851 19.9399C227.441 23.4717 230.501 25.8905 233.896 26.8068C235.966 27.3633 238.489 27.1927 240.774 27.1741C240.837 27.1729 240.9 27.1844 240.96 27.208C241.019 27.2316 241.073 27.2667 241.119 27.3114L243.89 30.0418C243.989 30.1383 244.039 30.2558 244.039 30.3943L244.053 35.8886C244.053 35.9142 244.043 35.9387 244.025 35.9568C244.007 35.9749 243.983 35.985 243.957 35.985C240.977 36.0023 237.999 35.9986 235.024 35.9739C229.192 35.9294 223.404 32.3642 220.384 27.6119C214.515 18.3669 218.656 7.34489 228.079 2.62594C232.898 0.214527 237.906 0.748745 243.093 0.745035C243.295 0.744979 243.489 0.823462 243.634 0.963915L254.089 11.0696C254.22 11.1975 254.325 11.3504 254.396 11.5193C254.467 11.6882 254.504 11.8695 254.504 12.0527L254.5 35.8033C254.5 35.9269 254.439 35.9887 254.315 35.9887L245.697 35.9962C245.568 35.9962 245.504 35.9319 245.504 35.8033C245.494 29.306 245.494 22.8138 245.504 16.3265C245.508 14.9538 245.192 14.9353 244.15 13.9039C242.725 12.4942 241.286 11.1017 239.832 9.72661C239.743 9.64252 239.637 9.59182 239.516 9.57451Z" fill="white"/>
              </svg>
        </div>
        <ul class="nav-menu">
            <li class="nav-item" id="special" data-value="REGISTER">REGISTER</li>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <li class="nav-item" id="special2" data-value="LOGIN">LOGIN</li>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <li class="nav-item" id="special3" data-value="TEAMS">TEAMS</li>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <li class="nav-item" id="special4" data-value="PROMO">PROMO</li>
            <li class="nav-item" style="height: 100%;"><div class="line"></div></li>
            <li class="nav-item" id="special5" data-value="FAQS">FAQS</li>
        </ul>
    </header>

    <svg class="title" width="799" height="120" viewBox="0 0 799 120" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.5 44.5V119H798V1H40.5L0.5 44.5Z" fill="#08040F" stroke="#FF0000"/>
        <path d="M180.115 26.4659H174.412V44H170.715V26.4659H165.011V22.945H180.115V26.4659ZM197.118 44H183.88V22.945H197.118V26.4659H187.576V31.7825H196.449V35.3034H187.576V40.4791H197.118V44ZM217.597 39.0003C217.597 39.8219 217.409 40.4908 217.033 41.0072C216.799 41.3593 216.399 41.8288 215.836 42.4156C215.273 42.9789 214.815 43.3545 214.463 43.5423C213.712 43.9648 212.984 44.176 212.28 44.176H206.154C204.628 44.176 203.137 43.2019 201.682 41.2537C201.541 41.0659 201.33 40.7021 201.048 40.1622L204.534 39.0003C205.003 39.6576 205.52 40.1974 206.083 40.6199C206.13 40.6434 206.212 40.6551 206.33 40.6551H212.104L212.315 40.6199C212.573 40.4791 212.902 40.2092 213.301 39.8101C213.7 39.4111 213.9 39.1412 213.9 39.0003V36.923C213.9 36.5709 213.759 36.3714 213.477 36.3244L204.323 33.719C203.454 33.4842 202.774 33.003 202.281 32.2754C201.811 31.5477 201.576 30.7497 201.576 29.8812V27.9799C201.576 27.1583 201.753 26.4894 202.105 25.973C202.339 25.6444 202.738 25.1984 203.302 24.635C203.889 24.0482 204.358 23.6492 204.71 23.4379C205.461 23.0154 206.189 22.8042 206.893 22.8042H212.104C213.606 22.8042 215.097 23.7783 216.576 25.7265C216.81 26.0551 217.045 26.4659 217.28 26.9588L213.724 27.9799C213.184 27.2053 212.667 26.6654 212.174 26.3603C212.151 26.3368 212.08 26.3251 211.963 26.3251H206.999L206.787 26.3603C206.506 26.5011 206.177 26.7593 205.802 27.1349C205.449 27.5104 205.273 27.7686 205.273 27.9095V29.6699C205.273 30.022 205.403 30.2215 205.661 30.2685L214.85 32.9444C215.695 33.1791 216.364 33.672 216.857 34.4231C217.35 35.1508 217.597 35.9371 217.597 36.7821V39.0003ZM236.127 26.4659H230.423V44H226.726V26.4659H221.022V22.945H236.127V26.4659ZM263.599 22.945L256.627 34.8104V44H252.931V34.8104L246.03 22.945H250.114L254.797 30.9374L259.479 22.945H263.599ZM282.49 39.0003C282.49 39.7749 282.302 40.4439 281.926 41.0072C281.645 41.3828 281.222 41.8522 280.659 42.4156C280.119 42.9789 279.685 43.3545 279.356 43.5423C278.675 43.9648 277.948 44.176 277.173 44.176H271.821C271.047 44.176 270.319 43.9648 269.638 43.5423C269.31 43.3545 268.852 42.9789 268.265 42.4156C267.702 41.8288 267.303 41.3593 267.068 41.0072C266.692 40.4439 266.505 39.7749 266.505 39.0003V27.9799C266.505 27.2053 266.692 26.5363 267.068 25.973C267.303 25.6209 267.702 25.1632 268.265 24.5998C268.852 24.013 269.31 23.6257 269.638 23.4379C270.319 23.0154 271.047 22.8042 271.821 22.8042H277.173C277.948 22.8042 278.675 23.0154 279.356 23.4379C279.685 23.6257 280.119 24.0013 280.659 24.5646C281.222 25.128 281.645 25.5974 281.926 25.973C282.302 26.5363 282.49 27.2053 282.49 27.9799V39.0003ZM270.202 28.0855V38.9651C270.202 39.0355 270.213 39.0825 270.237 39.1059C270.706 39.8101 271.223 40.3148 271.786 40.6199C271.833 40.6434 271.892 40.6551 271.962 40.6551H277.032C277.103 40.6551 277.161 40.6434 277.208 40.6199C277.772 40.3148 278.288 39.8101 278.757 39.1059L278.793 38.9651V28.0855C278.793 27.9916 278.781 27.9329 278.757 27.9095C278.264 27.1818 277.748 26.6654 277.208 26.3603C277.161 26.3368 277.103 26.3251 277.032 26.3251H271.962C271.868 26.3251 271.81 26.3368 271.786 26.3603C271.246 26.6654 270.73 27.1818 270.237 27.9095L270.202 28.0855ZM298.259 38.9651V22.945H301.956V39.0003C301.956 39.7749 301.768 40.4439 301.392 41.0072C301.134 41.3593 300.723 41.8288 300.16 42.4156C299.62 42.9789 299.174 43.3545 298.822 43.5423C298.141 43.9648 297.425 44.176 296.674 44.176H292.203C291.428 44.176 290.7 43.9648 290.02 43.5423C289.691 43.3545 289.233 42.9789 288.646 42.4156C288.083 41.8288 287.684 41.3593 287.449 41.0072C287.074 40.4439 286.886 39.7749 286.886 39.0003V22.945H290.583V38.9299C290.583 39.0238 290.595 39.0825 290.618 39.1059C291.111 39.8336 291.628 40.3383 292.167 40.6199L292.343 40.6551H296.533C296.604 40.6551 296.662 40.6434 296.709 40.6199C297.249 40.3383 297.754 39.8336 298.223 39.1059L298.259 38.9651ZM321.662 30.9022C321.662 31.7003 321.45 32.4162 321.028 33.05C320.863 33.2847 320.57 33.6133 320.148 34.0358C319.725 34.4349 319.385 34.7283 319.127 34.9161C318.821 35.1508 318.516 35.3151 318.211 35.409L322.401 44H318.387L314.479 35.6907H310.43V44H306.733V22.945H316.627C317.566 22.945 318.399 23.2032 319.127 23.7196C319.361 23.8839 319.69 24.189 320.112 24.635C320.558 25.081 320.863 25.4214 321.028 25.6561C321.45 26.2899 321.662 27.0058 321.662 27.8038V30.9022ZM317.965 30.867V27.8391C317.965 27.7217 317.953 27.6395 317.929 27.5926C317.53 26.8884 317.155 26.5128 316.803 26.4659H310.43V32.1698H316.627C316.791 32.1698 317.014 32.0407 317.296 31.7825C317.577 31.5243 317.789 31.2661 317.929 31.0079C317.953 30.9609 317.965 30.914 317.965 30.867ZM350.479 44H346.782V35.3034H339.106V44H335.409V22.945H339.106V31.7825H346.782V22.945H350.479V44ZM372.141 44H368.198L366.649 39.5285H358.656L357.107 44H353.164L360.522 22.945H364.818L372.141 44ZM365.487 36.0075L362.67 27.6982L359.818 36.0075H365.487ZM390.198 22.945L383.825 33.226L390.55 44H386.43L381.783 36.5005L377.17 44H373.051L379.741 33.226L373.403 22.945H377.487L381.783 29.9516L386.113 22.945H390.198ZM397.318 44H393.621V22.945H397.318V44ZM417.282 44H413.374L406.086 30.022V44H402.389V22.945H406.367L413.585 37.099V22.945H417.282V44ZM426.063 27.9799V39.0003C426.063 39.1881 426.25 39.4698 426.626 39.8453C427.025 40.1974 427.377 40.4556 427.682 40.6199H427.718C427.764 40.6434 427.811 40.6551 427.858 40.6551H432.647L432.823 40.6199C433.104 40.4556 433.445 40.174 433.844 39.7749C434.243 39.3759 434.442 39.0825 434.442 38.8947V35.4794H429.9V31.9585H438.139V39.0707C438.304 40.6199 438.527 42.263 438.808 44H435.182L435.006 43.155C434.043 43.8357 433.316 44.176 432.823 44.176H427.682C426.908 44.176 426.18 43.9648 425.499 43.5423C425.147 43.331 424.69 42.9555 424.126 42.4156C423.563 41.8522 423.164 41.4063 422.929 41.0776C422.554 40.5143 422.366 39.8336 422.366 39.0355V27.9095C422.366 27.1349 422.554 26.4659 422.929 25.9026C423.164 25.5505 423.563 25.0927 424.126 24.5294C424.713 23.9426 425.171 23.5553 425.499 23.3675C426.133 22.9685 426.861 22.7689 427.682 22.7689H432.823C434.442 22.7689 435.933 23.7431 437.294 25.6913C437.646 26.1842 437.893 26.595 438.034 26.9236L434.478 27.9447C433.961 27.2405 433.41 26.7006 432.823 26.3251C432.799 26.3016 432.741 26.2899 432.647 26.2899H427.858L427.682 26.3251C427.049 26.6772 426.52 27.1818 426.098 27.8391L426.063 27.9799ZM467.258 39.0003C467.258 39.8219 467.07 40.4908 466.694 41.0072C466.459 41.3593 466.06 41.8288 465.497 42.4156C464.934 42.9789 464.476 43.3545 464.124 43.5423C463.373 43.9648 462.645 44.176 461.941 44.176H455.815C454.289 44.176 452.798 43.2019 451.343 41.2537C451.202 41.0659 450.991 40.7021 450.709 40.1622L454.195 39.0003C454.664 39.6576 455.181 40.1974 455.744 40.6199C455.791 40.6434 455.873 40.6551 455.991 40.6551H461.765L461.976 40.6199C462.234 40.4791 462.563 40.2092 462.962 39.8101C463.361 39.4111 463.561 39.1412 463.561 39.0003V36.923C463.561 36.5709 463.42 36.3714 463.138 36.3244L453.984 33.719C453.115 33.4842 452.435 33.003 451.942 32.2754C451.472 31.5477 451.237 30.7497 451.237 29.8812V27.9799C451.237 27.1583 451.413 26.4894 451.766 25.973C452 25.6444 452.399 25.1984 452.963 24.635C453.549 24.0482 454.019 23.6492 454.371 23.4379C455.122 23.0154 455.85 22.8042 456.554 22.8042H461.765C463.267 22.8042 464.758 23.7783 466.236 25.7265C466.471 26.0551 466.706 26.4659 466.941 26.9588L463.385 27.9799C462.845 27.2053 462.328 26.6654 461.835 26.3603C461.812 26.3368 461.741 26.3251 461.624 26.3251H456.66L456.448 26.3603C456.167 26.5011 455.838 26.7593 455.463 27.1349C455.11 27.5104 454.934 27.7686 454.934 27.9095V29.6699C454.934 30.022 455.063 30.2215 455.322 30.2685L464.511 32.9444C465.356 33.1791 466.025 33.672 466.518 34.4231C467.011 35.1508 467.258 35.9371 467.258 36.7821V39.0003ZM487.724 44H483.182L475.894 35.1977H475.507V44H471.81V22.945H475.507V31.712H475.859C476.704 30.7262 477.936 29.2474 479.556 27.2757C481.175 25.304 482.372 23.8604 483.147 22.945H487.689L478.922 33.4373C479.297 33.8833 480.6 35.4559 482.83 38.1553C485.084 40.8547 486.715 42.8029 487.724 44ZM494.487 44H490.79V22.945H494.487V44ZM512.585 44H499.557V22.945H503.254V40.4791H512.585V44ZM529.502 44H516.474V22.945H520.171V40.4791H529.502V44ZM548.954 39.0003C548.954 39.8219 548.766 40.4908 548.39 41.0072C548.155 41.3593 547.756 41.8288 547.193 42.4156C546.63 42.9789 546.172 43.3545 545.82 43.5423C545.069 43.9648 544.341 44.176 543.637 44.176H537.511C535.985 44.176 534.494 43.2019 533.039 41.2537C532.898 41.0659 532.687 40.7021 532.405 40.1622L535.891 39.0003C536.36 39.6576 536.877 40.1974 537.44 40.6199C537.487 40.6434 537.569 40.6551 537.687 40.6551H543.461L543.672 40.6199C543.93 40.4791 544.259 40.2092 544.658 39.8101C545.057 39.4111 545.257 39.1412 545.257 39.0003V36.923C545.257 36.5709 545.116 36.3714 544.834 36.3244L535.68 33.719C534.811 33.4842 534.131 33.003 533.638 32.2754C533.168 31.5477 532.933 30.7497 532.933 29.8812V27.9799C532.933 27.1583 533.109 26.4894 533.462 25.973C533.696 25.6444 534.095 25.1984 534.659 24.635C535.245 24.0482 535.715 23.6492 536.067 23.4379C536.818 23.0154 537.546 22.8042 538.25 22.8042H543.461C544.963 22.8042 546.454 23.7783 547.932 25.7265C548.167 26.0551 548.402 26.4659 548.637 26.9588L545.081 27.9799C544.541 27.2053 544.024 26.6654 543.531 26.3603C543.508 26.3368 543.437 26.3251 543.32 26.3251H538.356L538.144 26.3603C537.863 26.5011 537.534 26.7593 537.158 27.1349C536.806 27.5104 536.63 27.7686 536.63 27.9095V29.6699C536.63 30.022 536.759 30.2215 537.018 30.2685L546.207 32.9444C547.052 33.1791 547.721 33.672 548.214 34.4231C548.707 35.1508 548.954 35.9371 548.954 36.7821V39.0003ZM584.96 22.945L580.066 44H575.876L572.496 29.8812L569.08 44H564.855L560.032 22.945H563.834L567.003 37.7328L570.489 22.945H574.432L577.918 37.7328L581.052 22.945H584.96ZM591.999 44H588.302V22.945H591.999V44ZM611.048 26.4659H605.344V44H601.647V26.4659H595.943V22.945H611.048V26.4659ZM629.881 44H626.185V35.3034H618.509V44H614.812V22.945H618.509V31.7825H626.185V22.945H629.881V44Z" fill="#FF0000"/>
        <path d="M198.384 89.0427C198.384 90.4264 198.048 91.6123 197.376 92.6007C197.099 92.996 196.605 93.5692 195.894 94.3203C195.182 95.0319 194.629 95.5261 194.233 95.8028C193.008 96.6726 191.585 97.1074 189.964 97.1074H173.301V61.6464H189.964C191.505 61.6464 192.929 62.101 194.233 63.0102C194.629 63.287 195.182 63.8009 195.894 64.552C196.605 65.2636 197.099 65.8171 197.376 66.2124C198.048 67.2007 198.384 68.4263 198.384 69.889V74.2771C198.384 76.1747 197.613 77.8944 196.072 79.4362C197.613 80.978 198.384 82.6779 198.384 84.5359V89.0427ZM192.098 74.5736C192.138 74.4946 192.158 74.3562 192.158 74.1585V69.9483L192.098 69.6518C191.822 69.1774 191.446 68.7228 190.972 68.2879C190.537 67.8135 190.181 67.5763 189.904 67.5763H179.527V76.5305H189.964C190.24 76.5305 190.616 76.3131 191.09 75.8782C191.565 75.4434 191.901 75.0085 192.098 74.5736ZM192.098 89.2206C192.138 89.102 192.158 88.9636 192.158 88.8055V84.5952L192.098 84.2987C191.822 83.8243 191.446 83.3697 190.972 82.9349C190.537 82.5 190.181 82.2826 189.904 82.2826H179.527V91.1775H189.964C190.24 91.1775 190.616 90.96 191.09 90.5252C191.565 90.0903 191.901 89.6555 192.098 89.2206ZM231.336 75.048C231.336 76.3922 230.98 77.5979 230.269 78.6653C229.992 79.0606 229.498 79.6141 228.786 80.3257C228.075 80.9977 227.501 81.4919 227.067 81.8082C226.553 82.2035 226.039 82.4802 225.525 82.6384L232.581 97.1074H225.821L219.239 83.1128H212.42V97.1074H206.193V61.6464H222.856C224.438 61.6464 225.841 62.0812 227.067 62.9509C227.462 63.2277 228.015 63.7416 228.727 64.4927C229.478 65.2439 229.992 65.8171 230.269 66.2124C230.98 67.2798 231.336 68.4856 231.336 69.8297V75.048ZM225.11 74.9887V69.889C225.11 69.6913 225.09 69.553 225.05 69.4739C224.378 68.2879 223.746 67.6554 223.153 67.5763H212.42V77.1828H222.856C223.133 77.1828 223.509 76.9654 223.983 76.5305C224.457 76.0957 224.813 75.6608 225.05 75.2259C225.09 75.1469 225.11 75.0678 225.11 74.9887ZM257.553 89.1613V84.358C257.553 84.2394 257.533 84.1406 257.493 84.0615C257.256 83.6267 256.9 83.1918 256.426 82.757C255.991 82.3221 255.635 82.1047 255.358 82.1047H255.299H247.768V76.234H255.299H255.358C255.635 76.234 255.991 76.0166 256.426 75.5817C256.9 75.1469 257.256 74.712 257.493 74.2771L257.553 73.9806V69.7111L257.493 69.4146C257.217 68.9402 256.841 68.5053 256.367 68.11C255.932 67.6751 255.576 67.4577 255.299 67.4577H248.539C248.46 67.4577 248.381 67.4775 248.302 67.517C247.788 67.7542 247.215 68.1693 246.582 68.7623C245.989 69.3158 245.594 69.9087 245.396 70.5413L239.348 68.8809C239.862 67.8135 240.336 66.9635 240.771 66.331C243.34 63.0893 245.871 61.4685 248.361 61.4685H255.358C256.9 61.4685 258.284 61.9033 259.509 62.773C260.735 63.6823 261.802 64.7695 262.712 66.0345C263.423 67.1019 263.779 68.3077 263.779 69.6518V74.0992C263.779 75.8782 262.988 77.5584 261.407 79.1397C262.988 80.721 263.779 82.4209 263.779 84.2394V89.2206C263.779 90.5647 263.423 91.7705 262.712 92.8379C262.435 93.2332 261.921 93.8064 261.17 94.5575C260.458 95.3087 259.905 95.8226 259.509 96.0993C258.284 96.9691 256.9 97.4039 255.358 97.4039H248.361C245.791 97.4039 243.261 95.7831 240.771 92.5414C240.02 91.5135 239.526 90.6635 239.288 89.9915L245.337 88.3904C246.404 89.9717 247.373 90.9798 248.243 91.4147C248.322 91.4542 248.42 91.474 248.539 91.474H255.299C255.536 91.474 255.892 91.2565 256.367 90.8217C256.841 90.3868 257.217 89.9322 257.493 89.4578C257.533 89.3787 257.553 89.2799 257.553 89.1613ZM295.241 90.0508H291.623V97.1074H285.397V90.0508H269.505V84.7138L284.448 61.6464H291.623V84.1208H295.241V90.0508ZM285.397 84.1208V70.6599L276.798 84.1208H285.397ZM327.177 90.2287C326.781 91.1379 326.366 91.8891 325.931 92.4821C323.48 95.7633 320.97 97.4039 318.4 97.4039H310.988C309.683 97.4039 308.458 97.0481 307.311 96.3365C306.718 95.9807 305.947 95.3284 304.999 94.3796C304.05 93.4309 303.378 92.6797 302.982 92.1263C302.35 91.1775 302.034 90.0508 302.034 88.7462V70.0669C302.034 68.8018 302.35 67.6949 302.982 66.7461C303.378 66.1531 304.05 65.3822 304.999 64.4334C305.987 63.4451 306.758 62.7928 307.311 62.4765C308.576 61.765 309.802 61.4092 310.988 61.4092H318.4C320.93 61.4092 323.441 63.0498 325.931 66.331C326.168 66.6473 326.584 67.3391 327.177 68.4065L321.128 70.1262C319.942 68.6635 319.053 67.7542 318.46 67.3984C318.42 67.3589 318.341 67.3391 318.222 67.3391H311.225L310.988 67.3984C309.96 67.9519 309.07 68.8216 308.319 70.0076C308.28 70.0866 308.26 70.3041 308.26 70.6599V88.6869C308.26 89.0032 308.576 89.4776 309.209 90.1101C309.881 90.7031 310.474 91.1379 310.988 91.4147C311.027 91.4542 311.166 91.474 311.403 91.474H318.163C318.282 91.474 318.38 91.4542 318.46 91.4147C318.815 91.2565 319.211 90.9403 319.646 90.4659C320.12 89.9915 320.495 89.5566 320.772 89.1613L321.128 88.6276L327.177 90.2287ZM360.191 97.1074H353.964V82.4605H341.037V97.1074H334.81V61.6464H341.037V76.5305H353.964V61.6464H360.191V97.1074ZM407.845 75.048C407.845 76.3922 407.489 77.5979 406.777 78.6653C406.501 79.0606 406.006 79.6141 405.295 80.3257C404.583 80.9977 404.01 81.4919 403.575 81.8082C402.35 82.6779 400.946 83.1128 399.365 83.1128H388.928V97.1074H382.702V61.6464H399.365C400.946 61.6464 402.35 62.0812 403.575 62.9509C403.97 63.2277 404.524 63.7416 405.235 64.4927C405.987 65.2439 406.501 65.8171 406.777 66.2124C407.489 67.2798 407.845 68.4856 407.845 69.8297V75.048ZM401.618 74.9887V69.889C401.618 69.6913 401.598 69.553 401.559 69.4739C400.887 68.2879 400.254 67.6554 399.661 67.5763H399.365H388.928V77.1828H399.365C399.642 77.1828 400.017 76.9654 400.492 76.5305C400.966 76.0957 401.322 75.6608 401.559 75.2259C401.598 75.1469 401.618 75.0678 401.618 74.9887ZM439.695 75.048C439.695 76.3922 439.339 77.5979 438.628 78.6653C438.351 79.0606 437.857 79.6141 437.145 80.3257C436.433 80.9977 435.86 81.4919 435.425 81.8082C434.911 82.2035 434.398 82.4802 433.884 82.6384L440.94 97.1074H434.18L427.598 83.1128H420.778V97.1074H414.552V61.6464H431.215C432.796 61.6464 434.2 62.0812 435.425 62.9509C435.821 63.2277 436.374 63.7416 437.086 64.4927C437.837 65.2439 438.351 65.8171 438.628 66.2124C439.339 67.2798 439.695 68.4856 439.695 69.8297V75.048ZM433.469 74.9887V69.889C433.469 69.6913 433.449 69.553 433.409 69.4739C432.737 68.2879 432.105 67.6554 431.512 67.5763H420.778V77.1828H431.215C431.492 77.1828 431.867 76.9654 432.342 76.5305C432.816 76.0957 433.172 75.6608 433.409 75.2259C433.449 75.1469 433.469 75.0678 433.469 74.9887ZM473.027 88.6869C473.027 89.9915 472.711 91.1182 472.078 92.067C471.644 92.66 470.952 93.4506 470.003 94.4389C469.094 95.3877 468.343 96.0203 467.75 96.3365C466.603 97.0481 465.397 97.4039 464.132 97.4039H457.55C456.245 97.4039 455.02 97.0481 453.874 96.3365C453.32 96.0203 452.549 95.3877 451.561 94.4389C450.612 93.4506 449.94 92.66 449.545 92.067C448.912 91.1182 448.596 89.9915 448.596 88.6869V70.1262C448.596 68.8216 448.912 67.6949 449.545 66.7461C449.94 66.1531 450.612 65.3822 451.561 64.4334C452.549 63.4451 453.32 62.7928 453.874 62.4765C455.02 61.765 456.245 61.4092 457.55 61.4092H464.132C465.397 61.4092 466.603 61.765 467.75 62.4765C468.343 62.7928 469.094 63.4451 470.003 64.4334C470.952 65.3822 471.644 66.1531 472.078 66.7461C472.711 67.6949 473.027 68.8216 473.027 70.1262V88.6869ZM454.822 70.2448V88.6276C454.822 88.7462 454.842 88.8253 454.882 88.8648C455.712 90.0903 456.582 90.9403 457.491 91.4147C457.57 91.4542 457.669 91.474 457.787 91.474H463.895C464.014 91.474 464.113 91.4542 464.192 91.4147C465.101 90.9403 465.951 90.0903 466.741 88.8648L466.801 88.6276V70.2448C466.801 70.0866 466.781 69.9878 466.741 69.9483C465.951 68.7228 465.101 67.8728 464.192 67.3984C464.113 67.3589 464.014 67.3391 463.895 67.3391H457.787C457.629 67.3391 457.53 67.3589 457.491 67.3984C456.582 67.8333 455.712 68.6832 454.882 69.9483L454.822 70.2448ZM503.184 67.5763H493.578V97.1074H487.351V67.5763H477.745V61.6464H503.184V67.5763ZM531.284 88.6869C531.284 89.9915 530.968 91.1182 530.336 92.067C529.901 92.66 529.209 93.4506 528.26 94.4389C527.351 95.3877 526.6 96.0203 526.007 96.3365C524.86 97.0481 523.654 97.4039 522.389 97.4039H515.807C514.503 97.4039 513.277 97.0481 512.131 96.3365C511.577 96.0203 510.806 95.3877 509.818 94.4389C508.869 93.4506 508.197 92.66 507.802 92.067C507.169 91.1182 506.853 89.9915 506.853 88.6869V70.1262C506.853 68.8216 507.169 67.6949 507.802 66.7461C508.197 66.1531 508.869 65.3822 509.818 64.4334C510.806 63.4451 511.577 62.7928 512.131 62.4765C513.277 61.765 514.503 61.4092 515.807 61.4092H522.389C523.654 61.4092 524.86 61.765 526.007 62.4765C526.6 62.7928 527.351 63.4451 528.26 64.4334C529.209 65.3822 529.901 66.1531 530.336 66.7461C530.968 67.6949 531.284 68.8216 531.284 70.1262V88.6869ZM513.079 70.2448V88.6276C513.079 88.7462 513.099 88.8253 513.139 88.8648C513.969 90.0903 514.839 90.9403 515.748 91.4147C515.827 91.4542 515.926 91.474 516.044 91.474H522.152C522.271 91.474 522.37 91.4542 522.449 91.4147C523.358 90.9403 524.208 90.0903 524.999 88.8648L525.058 88.6276V70.2448C525.058 70.0866 525.038 69.9878 524.999 69.9483C524.208 68.7228 523.358 67.8728 522.449 67.3984C522.37 67.3589 522.271 67.3391 522.152 67.3391H516.044C515.886 67.3391 515.787 67.3589 515.748 67.3984C514.839 67.8333 513.969 68.6832 513.139 69.9483L513.079 70.2448ZM563.042 90.2287C562.647 91.1379 562.232 91.8891 561.797 92.4821C559.346 95.7633 556.836 97.4039 554.266 97.4039H546.854C545.549 97.4039 544.324 97.0481 543.177 96.3365C542.584 95.9807 541.813 95.3284 540.864 94.3796C539.916 93.4309 539.244 92.6797 538.848 92.1263C538.216 91.1775 537.899 90.0508 537.899 88.7462V70.0669C537.899 68.8018 538.216 67.6949 538.848 66.7461C539.244 66.1531 539.916 65.3822 540.864 64.4334C541.853 63.4451 542.624 62.7928 543.177 62.4765C544.442 61.765 545.668 61.4092 546.854 61.4092H554.266C556.796 61.4092 559.307 63.0498 561.797 66.331C562.034 66.6473 562.449 67.3391 563.042 68.4065L556.994 70.1262C555.808 68.6635 554.918 67.7542 554.325 67.3984C554.286 67.3589 554.207 67.3391 554.088 67.3391H547.091L546.854 67.3984C545.826 67.9519 544.936 68.8216 544.185 70.0076C544.146 70.0866 544.126 70.3041 544.126 70.6599V88.6869C544.126 89.0032 544.442 89.4776 545.075 90.1101C545.747 90.7031 546.34 91.1379 546.854 91.4147C546.893 91.4542 547.032 91.474 547.269 91.474H554.029C554.147 91.474 554.246 91.4542 554.325 91.4147C554.681 91.2565 555.076 90.9403 555.511 90.4659C555.986 89.9915 556.361 89.5566 556.638 89.1613L556.994 88.6276L563.042 90.2287ZM594.811 88.6869C594.811 89.9915 594.495 91.1182 593.862 92.067C593.427 92.66 592.736 93.4506 591.787 94.4389C590.878 95.3877 590.126 96.0203 589.533 96.3365C588.387 97.0481 587.181 97.4039 585.916 97.4039H579.334C578.029 97.4039 576.804 97.0481 575.657 96.3365C575.104 96.0203 574.333 95.3877 573.345 94.4389C572.396 93.4506 571.724 92.66 571.329 92.067C570.696 91.1182 570.38 89.9915 570.38 88.6869V70.1262C570.38 68.8216 570.696 67.6949 571.329 66.7461C571.724 66.1531 572.396 65.3822 573.345 64.4334C574.333 63.4451 575.104 62.7928 575.657 62.4765C576.804 61.765 578.029 61.4092 579.334 61.4092H585.916C587.181 61.4092 588.387 61.765 589.533 62.4765C590.126 62.7928 590.878 63.4451 591.787 64.4334C592.736 65.3822 593.427 66.1531 593.862 66.7461C594.495 67.6949 594.811 68.8216 594.811 70.1262V88.6869ZM576.606 70.2448V88.6276C576.606 88.7462 576.626 88.8253 576.665 88.8648C577.496 90.0903 578.365 90.9403 579.275 91.4147C579.354 91.4542 579.453 91.474 579.571 91.474H585.679C585.798 91.474 585.896 91.4542 585.976 91.4147C586.885 90.9403 587.735 90.0903 588.525 88.8648L588.585 88.6276V70.2448C588.585 70.0866 588.565 69.9878 588.525 69.9483C587.735 68.7228 586.885 67.8728 585.976 67.3984C585.896 67.3589 585.798 67.3391 585.679 67.3391H579.571C579.413 67.3391 579.314 67.3589 579.275 67.3984C578.365 67.8333 577.496 68.6832 576.665 69.9483L576.606 70.2448ZM623.367 97.1074H601.426V61.6464H607.653V91.1775H623.367V97.1074Z" fill="white"/>
    </svg>
    <div class="boxContainer">
        <div class="matrix">
            <div class="timeContainer" id="timeContainer">8:00</div>
            <div class="mainBreach">
                <div class="breachKaBeta">
                    <p>COD3 M4TR1X</p>
                </div>
            </div>
            <div class="mainBox">
                <table id="matrix" cellspacing=0>
                    <tr class="matrixRow" id="firstRow" style="background-color: #333">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                    <tr class="matrixRow">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                    <tr class="matrixRow">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                    <tr class="matrixRow">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                    <tr class="matrixRow">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                    <tr class="matrixRow">
                        <td class="one" onclick="inputSequence(event)"></td>
                        <td class="two" onclick="inputSequence(event)"></td>
                        <td class="three" onclick="inputSequence(event)"></td>
                        <td class="four" onclick="inputSequence(event)"></td>
                        <td class="five" onclick="inputSequence(event)"></td>
                        <td class="six" onclick="inputSequence(event)"></td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="sequences">
            <div class="timeContainer" style="visibility: hidden;">8:00</div>
            <div class="mainBreach">
                <div class="breachKaBeta">
                    <p>S3QU3NC3 R3QU1R3D</p>
                </div>
            </div>
            <div class="mainBox">
                <table id="sequenceTable">
                    <tr class=sequenceRow>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr class="sequenceRow">
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr class="sequenceRow">
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <svg class="bottom-vector" width="988" height="39" viewBox="0 0 988 39" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M38.5 37.5L548.5 37.5M789 37.5L987 37.5V1L825.5 1L789 37.5ZM789 37.5L752.5 37.5M752.5 37.5L789 1L703.5 1L667 37.5M752.5 37.5L667 37.5M667 37.5L630 37.5M548.5 37.5L585 1L666.5 1L630 37.5M548.5 37.5L630 37.5M33 37.5H22M17.5 37.5H10M5.5 37.5H0" stroke="#FF0000"/>
        <path d="M847.5 1.18359L811 37.6836L832 37.6836L868 1.18359L847.5 1.18359Z" fill="#FF0000" stroke="#FF0000"/>
        <path d="M881.499 1L844.999 37.5L865.999 37.5L901.999 1L881.499 1Z" fill="#FF0000" stroke="#FF0000"/>
    </svg>  
    <script>
        const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]
        const chars = ['A', 'B', 'C', 'D', 'E', 'F']
        const sequences = []
        const selectedSequences = []
        var numberOfSelectedSequences = 0
        var sequencesTxt = []
        var timer = 8;
        var failed = false;
        sequences.push(getRandomSequence())
        sequences.push(getRandomSequence())
        sequences.push(getRandomSequence())
        var firstElement, secondElement, thirdElement
        console.log(sequences)
        
        window.onload = function() {
            const matrixRows = document.querySelectorAll('.matrixRow'),
                sequenceRows = document.querySelectorAll('.sequenceRow')
            for (let i = 0; i < matrixRows.length; i++) {
                const matrixCell = matrixRows[i].children
                for (let j = 0; j < matrixCell.length; j++) {
                    const randomChar = chars[Math.floor(Math.random() * 6)]
                    const randomInt = nums[Math.floor(Math.random() * 9)]
                    matrixCell[j].innerHTML = `${randomChar}${randomInt}`
                }
            }
            for (let k = 0; k < sequenceRows.length; k++) {
                const sequenceCell = sequenceRows[k].children
                for (let l = 0; l < sequenceCell.length; l++) {
                    const sequence1text = [matrixRows[0].children[sequences[0][0]].innerText, matrixRows[sequences[0][1]].children[sequences[0][0]].innerText, matrixRows[sequences[0][1]].children[sequences[0][2]].innerText]
                    const sequence2text = [matrixRows[0].children[sequences[1][0]].innerText, matrixRows[sequences[1][1]].children[sequences[1][0]].innerText, matrixRows[sequences[1][1]].children[sequences[1][2]].innerText]
                    const sequence3text = [matrixRows[0].children[sequences[2][0]].innerText, matrixRows[sequences[2][1]].children[sequences[2][0]].innerText, matrixRows[sequences[2][1]].children[sequences[2][2]].innerText]
                    document.getElementsByClassName('sequenceRow')[0].children[0].innerText = sequence1text[0]
                    document.getElementsByClassName('sequenceRow')[0].children[1].innerText = sequence1text[1]
                    document.getElementsByClassName('sequenceRow')[0].children[2].innerText = sequence1text[2]
                    document.getElementsByClassName('sequenceRow')[1].children[0].innerText = sequence2text[0]
                    document.getElementsByClassName('sequenceRow')[1].children[1].innerText = sequence2text[1]
                    document.getElementsByClassName('sequenceRow')[1].children[2].innerText = sequence2text[2]
                    document.getElementsByClassName('sequenceRow')[2].children[0].innerText = sequence3text[0]
                    document.getElementsByClassName('sequenceRow')[2].children[1].innerText = sequence3text[1]
                    document.getElementsByClassName('sequenceRow')[2].children[2].innerText = sequence3text[2]
                    sequencesTxt = [sequence1text, sequence2text, sequence3text]
                }
            }
        }
        function getRandomSequence() {
            var sequence1, sequence2, sequence3
            sequence1 = Math.floor(Math.random() * 6)
            sequence2 = Math.floor(Math.random() * 6)
            if (sequence2 == 0) {
                sequence2 = 2
            }
            sequence3 = Math.floor(Math.random() * 6)
            if (sequence3 == sequence1) {
                if (sequence1 == 0) {
                    sequence3 = 1
                } else if (sequence1 == 5) {
                    sequence3 = 4
                } else {
                    sequence3 = sequence1 + 1
                }
            }
            return [sequence1, sequence2, sequence3]
        }
        function inputSequence(event) {
            const selectedText = event.target.innerText
            switch (numberOfSelectedSequences) {
                case 0:
                    startBreach()
                    if (event.target.parentElement == document.getElementById('firstRow')) {
                        selectedSequences.push(selectedText)
                        numberOfSelectedSequences += 1
                        firstElement = event.target
                        document.getElementById('firstRow').style.backgroundColor = 'inherit'
                        const myClasses = event.target.className
                        for (let j = 0; j < document.getElementsByClassName(myClasses).length; j++) {
                            document.getElementsByClassName(myClasses)[j].style.backgroundColor = '#333';
                        }
                    } else {
                        return;
                    }
                    break;
                case 1:
                    if (event.target.className == firstElement.className) {
                        selectedSequences.push(selectedText)
                        numberOfSelectedSequences += 1
                        secondElement = event.target
                        for (let j = 0; j < document.getElementsByClassName(secondElement.className).length; j++) {
                            document.getElementsByClassName(secondElement.className)[j].style.backgroundColor = 'inherit'
                        }
                        secondElement.parentElement.style.backgroundColor = '#333'
                    } else {
                        return
                    }
                    break;
                case 2:
                    if (event.target.parentElement == secondElement.parentElement) {
                        selectedSequences.push(selectedText)
                        numberOfSelectedSequences += 1
                        thirdElement = event.target
                        confirmSequences()
                    } else return
                    break;
                default:
                    return;
            }
            console.log(selectedSequences)
        }
        function confirmSequences() {
            for (let i = 0; i < sequencesTxt.length; i++) {
                if (selectedSequences[0] == sequencesTxt[i][0] && selectedSequences[1] == sequencesTxt[i][1] && selectedSequences[2] == sequencesTxt[i][2]) {
                    return successfulBreach()
                } else {
                    if (i == 2) return failureBreach()
                    if (i < 2) continue;
                }
            }
            console.log(sequencesTxt)
        }
        function startBreach() {
        const timerInterval = window.setInterval(function() {
            if (timer <= 0.01 || failed) {
                clearInterval(timerInterval)
                failedBreach()
            };
            const timerElement = document.getElementById('timeContainer')
            const newTime = (timer - 0.01).toFixed(2)
            timer -= 0.01
            timerElement.innerText = newTime
        }, 10)
        }
        function successfulBreach() {
            const xhttp = new XMLHttpRequest()
            xhttp.open("POST", "/breachProtocol");
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send("success=yes");
            alert("SUCCESSFUL BREACH! YOU EARNED 20 COINS!")
            window.location.href='/breachProtocol'
        }
        function failedBreach() {
            alert('FAILURE! BETTER LUCK NEXT TIME!')
            window.location.href = '/breachProtocol'
        }
    </script>
</body>
</html>